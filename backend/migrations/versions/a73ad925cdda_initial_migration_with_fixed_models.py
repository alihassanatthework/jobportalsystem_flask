"""Initial migration with fixed models

Revision ID: a73ad925cdda
Revises: 
Create Date: 2025-06-30 05:23:05.180686

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a73ad925cdda'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_analytics')
    op.drop_table('feedback')
    op.drop_table('users')
    op.drop_table('notifications')
    op.drop_table('job_categories')
    op.drop_table('messages')
    op.drop_table('applications')
    op.drop_table('conversations')
    op.drop_table('user_analytics')
    op.drop_table('wishlists')
    op.drop_table('user_profiles')
    op.drop_table('jobs')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('jobs',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('employer_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('requirements', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('responsibilities', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('benefits', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('job_type', postgresql.ENUM('FULL_TIME', 'PART_TIME', 'CONTRACT', 'INTERNSHIP', 'FREELANCE', 'TEMPORARY', name='jobtype'), autoincrement=False, nullable=False),
    sa.Column('experience_level', postgresql.ENUM('ENTRY', 'JUNIOR', 'MID', 'SENIOR', 'LEAD', 'EXECUTIVE', name='experiencelevel'), autoincrement=False, nullable=False),
    sa.Column('min_experience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('max_experience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('min_salary', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('max_salary', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('salary_period', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('is_remote', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('remote_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('application_deadline', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('max_applications', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_applications', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_featured', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_urgent', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('slug', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('meta_title', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('meta_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('published_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['job_categories.id'], name='jobs_category_id_fkey'),
    sa.ForeignKeyConstraint(['employer_id'], ['users.id'], name='jobs_employer_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='jobs_pkey'),
    sa.UniqueConstraint('slug', name='jobs_slug_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_profiles',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('date_of_birth', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('profile_picture', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('resume_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('address', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('headline', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('experience_years', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('current_salary', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('expected_salary', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('education', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('work_experience', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('certifications', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('languages', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('company_name', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('company_website', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('company_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('company_size', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('industry', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('founded_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('company_logo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('job_preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('notification_preferences', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('linkedin_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('github_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('portfolio_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_profiles_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_profiles_pkey'))
    )
    op.create_table('wishlists',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('candidate_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('wishlist_type', postgresql.ENUM('SAVED_JOB', 'SAVED_CANDIDATE', name='wishlisttype'), autoincrement=False, nullable=False),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['candidate_id'], ['users.id'], name=op.f('wishlists_candidate_id_fkey')),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('wishlists_job_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('wishlists_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('wishlists_pkey'))
    )
    op.create_table('user_analytics',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('page_views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sessions', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('session_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('jobs_viewed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('jobs_applied', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('jobs_saved', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('jobs_shared', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('profile_views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('profile_edits', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('messages_sent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('messages_received', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('searches_performed', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('filters_used', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('device_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('browser', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('operating_system', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_analytics_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_analytics_pkey'))
    )
    op.create_table('conversations',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('participant1_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('participant2_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('subject', sa.VARCHAR(length=200), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('last_message_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name='conversations_job_id_fkey'),
    sa.ForeignKeyConstraint(['participant1_id'], ['users.id'], name='conversations_participant1_id_fkey'),
    sa.ForeignKeyConstraint(['participant2_id'], ['users.id'], name='conversations_participant2_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='conversations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('applications',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('applicant_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('cover_letter', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('resume_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('portfolio_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('expected_salary', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('salary_currency', sa.VARCHAR(length=3), autoincrement=False, nullable=True),
    sa.Column('salary_period', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('APPLIED', 'REVIEWING', 'SHORTLISTED', 'INTERVIEW_SCHEDULED', 'INTERVIEWED', 'OFFER_EXTENDED', 'HIRED', 'REJECTED', 'WITHDRAWN', name='applicationstatus'), autoincrement=False, nullable=True),
    sa.Column('status_updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('status_updated_by', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('interview_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('interview_location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('interview_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('interview_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('employer_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('applicant_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('applied_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['applicant_id'], ['users.id'], name='applications_applicant_id_fkey'),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name='applications_job_id_fkey'),
    sa.ForeignKeyConstraint(['status_updated_by'], ['users.id'], name='applications_status_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='applications_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('messages',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('conversation_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('sender_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('recipient_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('message_type', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('attachment_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('attachment_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('attachment_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('read_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['conversation_id'], ['conversations.id'], name='messages_conversation_id_fkey'),
    sa.ForeignKeyConstraint(['recipient_id'], ['users.id'], name='messages_recipient_id_fkey'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name='messages_sender_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='messages_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('job_categories',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('icon', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('color', sa.VARCHAR(length=7), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='job_categories_pkey'),
    sa.UniqueConstraint('name', name='job_categories_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('notifications',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('notification_type', postgresql.ENUM('APPLICATION_RECEIVED', 'APPLICATION_STATUS_CHANGED', 'INTERVIEW_SCHEDULED', 'NEW_MESSAGE', 'JOB_RECOMMENDATION', 'CANDIDATE_RECOMMENDATION', 'SYSTEM_ANNOUNCEMENT', 'PROFILE_VIEWED', 'JOB_EXPIRING', 'APPLICATION_DEADLINE', name='notificationtype'), autoincrement=False, nullable=False),
    sa.Column('priority', postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='notificationpriority'), autoincrement=False, nullable=True),
    sa.Column('related_job_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('related_application_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('related_message_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('related_user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('read_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('action_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('action_text', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('notification_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['related_application_id'], ['applications.id'], name=op.f('notifications_related_application_id_fkey')),
    sa.ForeignKeyConstraint(['related_job_id'], ['jobs.id'], name=op.f('notifications_related_job_id_fkey')),
    sa.ForeignKeyConstraint(['related_message_id'], ['messages.id'], name=op.f('notifications_related_message_id_fkey')),
    sa.ForeignKeyConstraint(['related_user_id'], ['users.id'], name=op.f('notifications_related_user_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('notifications_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('notifications_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('JOB_SEEKER', 'EMPLOYER', 'ADMIN', name='userrole'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_verified', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('email_verified_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('last_login', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('feedback',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('feedback_type', postgresql.ENUM('BUG_REPORT', 'FEATURE_REQUEST', 'GENERAL_FEEDBACK', 'SUPPORT_REQUEST', 'COMPLAINT', 'COMPLIMENT', name='feedbacktype'), autoincrement=False, nullable=False),
    sa.Column('subject', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('priority', postgresql.ENUM('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='feedbackpriority'), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('OPEN', 'IN_PROGRESS', 'RESOLVED', 'CLOSED', name='feedbackstatus'), autoincrement=False, nullable=True),
    sa.Column('assigned_to', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('resolved_by', sa.VARCHAR(length=36), autoincrement=False, nullable=True),
    sa.Column('resolution_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_agent', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('page_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('browser_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('system_info', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('resolved_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['assigned_to'], ['users.id'], name=op.f('feedback_assigned_to_fkey')),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], name=op.f('feedback_resolved_by_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('feedback_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('feedback_pkey'))
    )
    op.create_table('job_analytics',
    sa.Column('id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('job_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('unique_views', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('time_spent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('applications', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('saves', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('shares', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('clicks', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('traffic_sources', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('search_keywords', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('view_to_application_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('view_to_save_rate', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_id'], ['jobs.id'], name=op.f('job_analytics_job_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('job_analytics_pkey'))
    )
    # ### end Alembic commands ###
